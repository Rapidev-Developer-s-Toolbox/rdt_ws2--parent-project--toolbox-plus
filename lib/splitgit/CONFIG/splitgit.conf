################# ----------------------- ~~~ SPLITGIT USER CONFIGURATION FILE ~~~ -----------------------  #################

# What follows is the user configuration for splitgit for this user. If you need to make changes to the splitgit config,
# do so here. The other configuration file, at `../../../etc/splitgit/config` is only for backup and should not be changed. It 
# exists to ensure that the program will still run in the event that this file is missing, or if it has errors and won't parse 
# properly. It will give the program a chance to parse a default config and get its bearings. Removing or altering that file is 
# akin to busting the kneecaps of your last line of defense, so do so at your own risk!

[~:COMMAND_LINE:~]

###  Set commit-prefix to whatever you want the default value to be for the prefix for your commit titles to be. This is the same as 
###  the `--prefix' command-line option save 2 distinctions. First of all, the command-line option is of higher priority. If 
###  both are specified, the command-line value will be used. Secondly, the command-line option will only accept a string value, 
###  whereas the  option below will accept a string or a python style dictionary. If this is given, it must be of the form 
###              {'DRAWER_1_NAME': 'PREFIX', 'DRAWER_2_NAME': 'PREFIX', ..., 'DRAWER_N_NAME': 'PREFIX'}
###  This will let you set your commit title prefix (or the entire title if you wish) on a 'per-drawer' basis. If it is left 
###  blank (default for 'user' and 'backup' config files), no prefix is set from the config files. 
#
###  TIP: A great use-case for this is to set up or enforce a "commit-writing-convention" for a team of developers. This way all 
###  of the commits on the project are written in the same style and the logs are neater and easier to read. You can use the dict
###  format to add the drawer-names to each drawer's commits. This way, when they are merged back into the parent, it will be 
###  easier to tell the origin without digging into the actual commits.

SG_DEFAULT_COMMIT_TITLE_PREFIX=''

###  Specify the meaning of the `all' positional parameter. Takes an array of drawer names. The format is either a comma seperated 
###  list surrounded with the traditional '[]' array brackets (format A), or a bash-style array made up of space-separated words
###  surrounded by '()' parentheses. In both cases, the values MUST be quoted, or the file will not parse, causing program to go 
###  for the backup config file instead.  

SG_ALL_ARG_MEANING='${COMMONPATH}/${TWEENPATH}/drwr--*-tools'

### Resolves the 'default' value to the '--configsourcetype' cmd-line option. Set to one of 'jsonconfig', 'scopesfileconfig', 
### 'stdin', 'fullpath', or 'self'. If 'self' is chosen, you need to have specified an acceptable value for $SG_CONFIG_SOURCE_TYPE.
### See the splitgit(1) man_page for more info.

SG_ARGS_DEFAULT_CONFIG_SOURCE='fullpath'

### Set to python dictionary containing 'commonpath', 'tweenpath', and a list of all 'drwr-dirname' values in order to use this 
### as config. For normal use, prefer the autosyncing json and scopesfile options. Good for getting out of tight spots, when you have no config files available and do not feel like writing out huge 
### filenames at each call to splitgit(1).

SG_CONFIG_SOURCE_TYPE={}
